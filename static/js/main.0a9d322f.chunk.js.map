{"version":3,"sources":["assets/images/avatar.jpg","assets/images/github-brands.svg","assets/images/linkedin-brands.svg","assets/images/facebook-square-brands.svg","components/sidebar/index.tsx","model/markdown.ts","services/markdown/index.ts","context/MarkdownContext.tsx","contents/blogs/index.ts","contents/blogs/pass.md.ts","services/codeblock/index.tsx","pages/blog/details.tsx","components/card/index.tsx","components/markdownlist/index.tsx","pages/blog/index.tsx","pages/blog/tags.tsx","pages/home.tsx","pages/project/index.tsx","pages/resume.tsx","pages/skill.tsx","route/router.tsx","layout.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SideBar","className","src","Avatar","href","Github","LinkedIn","Facebook","to","activeClassName","exact","Markdown","id","title","description","content","tags","author","timedate","this","getMarkdownMetadata","contentLine","indices","getMetadataIndex","object","i","split","trim","parseInt","length","slice","undefined","join","indexOf","initialState","initialContext","blogs","blogLoad","projects","projectLoad","blogFiles","MarkdownContext","React","createContext","MarkdownProvider","props","useState","setBlogs","setBlogLoad","setProjectLoad","useEffect","markdownFiles","setContents","Promise","all","map","res","then","markdowns","sort","a","b","catch","err","console","log","Provider","value","children","CodeBlock","code","inline","match","exec","style","materialOceanic","language","PreTag","String","replace","BlogDetail","useParams","blogDetail","setBlogDetail","useContext","filter","blog","getLink","tag","moment","Date","format","components","idx","Card","getFullYear","getMonth","getDate","MarkdownList","load","markdown","Blog","Tags","setTags","uniqueTags","setUniqueTags","setLoad","flatMap","Set","tag1","Home","Project","Resume","Skill","Router","path","component","Layout","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a9d322f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar.e1e3cfe0.jpg\";","export default __webpack_public_path__ + \"static/media/github-brands.e2f07326.svg\";","export default __webpack_public_path__ + \"static/media/linkedin-brands.f4041044.svg\";","export default __webpack_public_path__ + \"static/media/facebook-square-brands.4572f314.svg\";","import React from 'react';\nimport './index.scss';\nimport Avatar from '../../assets/images/avatar.jpg';\nimport Github from '../../assets/images/github-brands.svg';\nimport LinkedIn from '../../assets/images/linkedin-brands.svg';\nimport Facebook from '../../assets/images/facebook-square-brands.svg';\nimport { NavLink } from 'react-router-dom';\n\nconst SideBar : () => JSX.Element  = () => {\n  return (\n    <div className=\"pane\">\n        <div className=\"smartphone-menu-trigger\"></div>\n        <header className=\"avatar\">\n            <img src={Avatar} />\n            <h2>Prabesh Maharjan</h2>\n        </header>\n        <ul className=\"link\">\n            <li><a href=\"https://www.github.com/prabeshmrz\"><img className=\"ic ic-github\" src={Github}/></a></li>\n            <li><a href=\"https://www.linkedin.com/in/prabesh-maharjan-04294a16b\"><img className=\"ic ic-linkedin\" src={LinkedIn}/></a></li>\n            <li><a href=\"https://www.facebook.com/prabeshmrz\"><img className=\"ic ic-facebook\" src={Facebook}/></a></li>\n        </ul>\n        <nav>\n            <NavLink to=\"/\" activeClassName=\"active\" className=\"ic ic-home\" exact><span>Home</span></NavLink>\n            <NavLink to=\"/skill\" activeClassName=\"active\" className=\"ic ic-skill\"><span>Skill</span></NavLink>\n            <NavLink to=\"/resume\" activeClassName=\"active\" className=\"ic ic-resume\"><span>Resume</span></NavLink>\n            <NavLink to=\"/projects\" activeClassName=\"active\" className=\"ic ic-project\"><span>Projects</span></NavLink>\n            <NavLink to=\"/blog\" activeClassName=\"active\" className=\"ic ic-blog\"><span>Blog</span></NavLink>\n        </nav>\n    </div>\n  );\n}\n\nexport default SideBar;\n","export class Markdown {\n\n    id: string;\n    title: string;\n    description: string;\n    content: string;\n    tags: string[];\n    author: string;\n    timedate: number;\n\n    constructor(\n        id?: string,\n        title?: string,\n        description?: string,\n        content?: string,\n        tags?: string[],\n        author?: string,\n        timedate?: number,\n    ) {\n        this.id = id ?? \"000\";\n        this.title = title ?? \"\";\n        this.description = description ?? \"No description\";\n        this.content = content ?? \"\";\n        this.tags = tags ?? [];\n        this.author = author ?? \"Prabesh Maharjan\";\n        this.timedate = timedate ?? -1;\n    }\n\n}\n","import { Markdown } from \"../../model/markdown\";\n\n// eslint-disable-next-line\nexport const getMarkdownContents = (markdownFiles: string[], setContents: (contents: Markdown[]) => void) => {\n    Promise.all(markdownFiles.map(res => getMarkdownMetadata(res.split(\"\\n\"))))\n        .then(markdowns => {\n            markdowns.sort((a: Markdown, b: Markdown) => b.timedate - a.timedate);\n            setContents(markdowns);\n        })\n        .catch(err => console.log(err));\n}\n\nconst getMarkdownMetadata: (contentLine: string[]) => Markdown = (contentLine: string[]) => {\n    const indices = getMetadataIndex(contentLine);\n    // eslint-disable-next-line\n    const object: any = new Markdown();\n    for(let i = indices[0]+1; i < indices[1]; i++) {\n        object[contentLine[i].split(\"=\")[0].trim()] = contentLine[i].split(\"=\")[1].trim();\n    }\n    object[\"timedate\"] = object[\"timedate\"] ? parseInt(object[\"timedate\"]) : -1;\n    object[\"tags\"] = object[\"tags\"].length ? object[\"tags\"].split(\"; \") : [];\n    object[\"content\"] = contentLine.slice(indices[1]+2, undefined).join(\"\\n\");\n    return object;\n};\n\nconst getMetadataIndex: (contentLine: string[]) => number[] = (contentLine: string[]) => {\n    return [contentLine.indexOf(\"---\"),\n        contentLine.indexOf(\"---\", 1)];\n}\n","import React, { useEffect, useState } from 'react';\nimport { BlogContents } from '../contents/blogs';\nimport { Markdown } from '../model/markdown';\nimport { getMarkdownContents } from '../services/markdown';\n\nconst initialState: Markdown[] = []\n\nconst initialContext = {\n    blogs: initialState,\n    blogLoad: false,\n    projects: initialState,\n    projectLoad: false\n}\n\n// eslint-disable-next-line\nconst blogFiles: string[] = BlogContents();\n\nexport const MarkdownContext = React.createContext(initialContext);\n\n// eslint-disable-next-line\nexport const MarkdownProvider = (props: any) => {\n\n    const [blogs, setBlogs] = useState(initialState);\n    const [blogLoad, setBlogLoad] = useState(false);\n\n    const [projects] = useState(initialState);\n    const [projectLoad, setProjectLoad] = useState(false);\n\n    useEffect(() => {\n        if (!blogs.length) {\n            getMarkdownContents(blogFiles, (content) => {setBlogs(content); setBlogLoad(true);});\n        }\n        if (!projects.length) {\n            setProjectLoad(true);\n        }\n    },[])\n\n    return (\n        <MarkdownContext.Provider value={{blogs, blogLoad, projects, projectLoad}}>\n            {props.children}\n        </MarkdownContext.Provider>\n    );\n}\n","import { Pass } from \"./pass.md\";\n\nexport const BlogContents: () => string[] = () => {\n    return [Pass];\n}\n","export const Pass = `---\nid = 001\ntitle = Manage password with pass command in Linux\ndescription = Easily manage all you passwords and credentials with the simplest password manager\nauthor = Prabesh Maharjan\ntags = pass; Linux; password manager; security\ntimedate = 1625481573000\n---\n\nWith rising cases for the data breaches, the importance of choosing strong password has increased. However, it could be very tiresome to come up with new, equally strong passwords for different credentials. Also, it would be equally painful, for having to manage all those password. There is no doubt about it being one of the main reasons for reusing of the same password in multiple places, by majority of users.\n\n## Password Managers\n\nBut, do we really need to manage our password manually? Aren't there password managers which takes care of all hardships mentioned above? And the answer is yes, and there are lots of them. But then again, why aren't everyone using them? Well frankly speaking, then answer could vary for different segments of people. Talking about me, I hesitated to use password managers (mostly online) because:\n* passwords were stored in 3rd party server\n* passwords could have been compromised if servers were breached\n\n## Where does pass fit in?\n\nPass is the simple password manager, following the UNIX philosophy. In between the hundreds of password managers, pass stands-out among the developer community due to its simplicity. It is basically a command line utility for password management.\n\nIt uses GPG key to encrypt the passwords and stores in the user's machine itself, instead of some servers in clouds that we don't know about. But then, how can we sync the passwords among various devices? Well, it allows to easily track password changes, keep backup and sync them between multiple devices (even in smartphones) using git.\n\n## How to use it?\n\nBefore setting up the pass, we need to make sure we have our GPG key. In most of the linux distributions, we can setup GPG key by command:\n\n~~~bash\ngpg —full-gen-key\n~~~\n\nOnce we have GPG key to encrypt the password, we can initialize the password store.\n\n~~~bash\npass init yourid@something.com\n~~~\n\nIt initializes the password store in default location i.e. ~/.password-store. After that we can start inserting and generating our credentials.\n\n~~~bash\npass insert login_url/username\n~~~\n\nIt will ask for the password you want to insert. Then it will create directory named login_url inside which username.gpg file resides holding the encrypted credentials.\n\nWe can also generate passwords of desired length by following command:\n\n~~~bash\npass generate login_url/username <length>\n~~~\n\nTo view the inserted or generated passwords, we use command:\n\n~~~bash\npass login_url/username\n~~~\n\nIt would directly show the password in the console itself. If that is not something you want then use \\`-c\\` flag. It will copy the password in clipboard. However, it will be erased from there after 45 sec., for the security purposes.\n\nAs pass uses UNIX shell commands, managing of passwords is also very easy. We can use commands like \\`rm\\`, \\`mv\\`, \\`cp\\`, etc. to remove, move and copy our password files.\n\nNow for backing up the passwords, we can directly push it to our private repository.\n\n~~~bash\npass git remote add origin git@url\npass git push -u origin main\n~~~\n\nPass is not just limited to terminal. Community has come up with list of impressive GUI clients for other platforms as well. Few of the pass clients that I use in daily basis are:\n\n* [passmenu](https://github.com/cdown/passmenu): a dmenu script\n* [passff](https://github.com/passff/passff): a Firefox extension\n* [Android-Password-Store](https://github.com/android-password-store/Android-Password-Store): an android app\n\nYou can checkout out various [commands](https://git.zx2c4.com/password-store/about/) that we can use with pass from the official site.`\n","import React from \"react\"\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\"\nimport { materialOceanic } from \"react-syntax-highlighter/dist/esm/styles/prism\"\n\nconst CodeBlock = {\n    // eslint-disable-next-line\n    code({inline, className, children, ...props}: any): JSX.Element {\n        const match = /language-(\\w+)/.exec(className || '')\n        return !inline && match ? (\n            <SyntaxHighlighter style={materialOceanic} language={match[1]} PreTag=\"div\" {...props}>\n                {String(children).replace(/\\n$/, '')}\n            </SyntaxHighlighter>\n        ) : (\n            <code className={className} {...props}>\n                {children}\n            </code>\n        )\n    }\n}\n\nexport default CodeBlock;\n","import moment from 'moment';\nimport React, { useContext, useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Link, useParams } from 'react-router-dom';\nimport { MarkdownContext } from '../../context/MarkdownContext';\nimport { Markdown } from '../../model/markdown';\nimport CodeBlock from '../../services/codeblock';\n\nconst BlogDetail: () => JSX.Element = () => {\n    const {id} = useParams<{id?: string}>();\n    const [blogDetail, setBlogDetail] = useState(new Markdown());\n    const {blogs, blogLoad} = useContext(MarkdownContext);\n\n    useEffect(() => {\n        setBlogDetail(blogs.filter(blog => blog.id === id)[0]);\n    },[blogs])\n\n    const getLink: (tag: string) => string = (tag: string) => {\n        return `/blog/tags/${tag}`;\n    }\n    return (\n        <>\n            {blogLoad && blogDetail ?\n            <div className=\"markdown\">\n                <h1>{blogDetail.title}</h1>\n                <div className=\"blog-header\">\n                    <span className=\"aurthor\">{blogDetail.author}, </span>\n                    <span className=\"date\">{moment(new Date(blogDetail.timedate)).format('ddd D MMM, YYYY')}</span>\n                </div>\n                <ReactMarkdown components={CodeBlock}>\n                    {blogDetail.content}\n                </ReactMarkdown>\n                <div className=\"tags\">\n                    {blogDetail.tags.length  ?\n                        blogDetail.tags?.map((tag: string, idx: number) => \n                            (<Link to={getLink(tag)} key={idx}><span key={idx}>\n                                {tag}\n                            </span></Link>)\n                        )\n                    : \"\"}\n                </div>\n            </div>\n            : !blogDetail && id === \"tags\" ? \"\"\n            : !blogDetail ? \"error\"\n            : \"Detail Loading\"}\n        </>\n    )\n}\n\nexport default BlogDetail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./index.scss\";\n\ninterface ICard {\n    id: string,\n    title: string,\n    description: string,\n    author: string,\n    tags: string[],\n    timedate: Date\n}\n\nconst Card: (props: ICard) => JSX.Element = (props: ICard) => {\n    const getLink: (tag: string) => string = (tag: string) => {\n        return `/blog/tags/${tag}`;\n    }\n    return (\n        <Link to={`/blog/${props.id}`} className=\"card\">\n            <h3>{props.title}</h3>\n            <p>{props.description}</p>\n            <div className=\"tags\">\n                {props.tags.length  ?\n                    props.tags?.map((tag: string, idx: number) => \n                        (<Link to={getLink(tag)} key={idx}><span key={idx}>\n                            {tag}\n                        </span></Link>)\n                    )\n                : \"\"}\n            </div>\n            <div className=\"card-footer\">\n                <span>{props.author}</span>\n                <span>{props.timedate.getFullYear()}-{props.timedate.getMonth()}-{props.timedate.getDate()}</span>\n            </div>\n        </Link>\n    );\n}\n\nexport default Card;\n","import React from 'react';\nimport { Markdown } from '../../model/markdown';\nimport Card from '../card';\n\ninterface IMarkdownList {\n    markdowns: Markdown[],\n    load: boolean\n}\n\nconst MarkdownList: (props: IMarkdownList) => JSX.Element = (props: IMarkdownList) => {\n\n    const {markdowns, load} = props;\n\n    return (\n        <div className=\"markdown-list\">\n            {load && markdowns.length === 0 ? \"No Items..\" :\n            load ? markdowns.map((markdown: Markdown, idx: number) => (\n                <Card \n                    key={idx}\n                    id={markdown.id}\n                    title={markdown.title}\n                    author={markdown.author}\n                    description ={markdown.description}\n                    timedate={new Date(markdown.timedate)}\n                    tags={markdown.tags}\n                    />\n            )) : \"Loading...\"}\n        </div>\n    )\n}\n\nexport default MarkdownList;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport MarkdownList from '../../components/markdownlist';\nimport { MarkdownContext } from '../../context/MarkdownContext';\nimport './index.scss';\n\nconst Blog: () => JSX.Element = () => {\n    const {blogs, blogLoad} = useContext(MarkdownContext);\n\n    return (\n        <>\n            <h1>Activities</h1>\n            <div className=\"flex-right padding-bottom-md link-red\"><Link to=\"/blog/tags\">All Topics</Link></div>\n            <MarkdownList markdowns={blogs} load={blogLoad}/>\n        </>\n    )\n}\n\nexport default Blog;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MarkdownContext } from '../../context/MarkdownContext';\nimport { Markdown } from '../../model/markdown';\n\nconst initialState: string[] = [];\n\nconst Tags: () => JSX.Element = () => {\n    const {blogs} = useContext(MarkdownContext);\n    const [tags, setTags] = useState(initialState);\n    const [uniqueTags, setUniqueTags] = useState(initialState);\n    const [load, setLoad] = useState(false);\n\n    useEffect(() => {\n        setTags(blogs.flatMap((blog: Markdown) => blog.tags));\n        setUniqueTags([...new Set(tags)]);\n        setLoad(true);\n    }, [blogs, uniqueTags])\n\n\n    const getLink: (tag: string) => string = (tag: string) => {\n        return `/blog/tags(${tag})`;\n    }\n\n    return (\n        <>\n            <h1>Tags</h1>\n                {load ? ( blogs.length ? \n                    <div className=\"all-tags\">\n                    {uniqueTags.map((tag: string, idx: number) => (\n                        <Link to={getLink(tag)} key={idx}>{tag}({tags.filter(tag1 => tag1===tag).length})</Link>\n                    ))}\n                    </div> : \"No Tags\")\n                : \"Loading\"}\n        </>\n    )\n}\n\nexport default Tags;\n","import React from 'react';\n\nconst Home: () => JSX.Element = () => {\n    return (\n        <div>\n            Home Element\n        </div>\n    )\n}\n\nexport default Home;\n","import React, { useContext } from 'react';\nimport MarkdownList from '../../components/markdownlist';\nimport { MarkdownContext } from '../../context/MarkdownContext';\n\nconst Project: () => JSX.Element = () => {\n    const {projects, projectLoad} = useContext(MarkdownContext);\n\n    return (\n        <>\n            <h1>Projects</h1>\n            <MarkdownList markdowns={projects} load={projectLoad}/>\n        </>\n    )\n}\n\nexport default Project;\n","import React from 'react';\n\nconst Resume: () => JSX.Element = () => {\n    return (\n        <div>\n            Resume Element\n        </div>\n    )\n}\n\nexport default Resume;\n","import React from 'react';\n\nconst Skill: () => JSX.Element = () => {\n    return (\n        <div>\n            Skill Element\n        </div>\n    )\n}\n\nexport default Skill;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport BlogDetail from '../pages/blog/details';\nimport Blog from '../pages/blog/index';\nimport Tags from '../pages/blog/tags';\nimport Home from '../pages/home';\nimport Project from '../pages/project';\nimport Resume from '../pages/resume';\nimport Skill from '../pages/skill';\n\nconst Router: () => JSX.Element = () => {\n    return (\n        <>\n            <Route path = \"/\" exact component = {Home} />\n            <Route path = \"/home\" component = {Home} />\n            <Route path = \"/skill\" component = {Skill} />\n            <Route path = \"/resume\" component = {Resume} />\n            <Route path = \"/projects\" component = {Project} />\n            <Route path = \"/blog\" exact component = {Blog} />\n            <Route path = \"/blog/tags\" exact component = {Tags} />\n            <Route path = \"/blog/:id\" exact component = {BlogDetail} />\n            <Route path = \"/blog/tags/:id\" component = {BlogDetail} />\n        </>\n    )\n}\n\nexport default Router;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport SideBar from \"./components/sidebar\";\nimport Router from './route/router';\n\nconst Layout : () => JSX.Element = () => {\n    return (\n        <BrowserRouter>\n            <SideBar/>\n            <main>\n                <Router/>\n            </main>\n        </BrowserRouter>\n    );\n}\n\nexport default Layout;\n","import React from 'react';\nimport Layout from './layout';\nimport './assets/css/index.scss';\nimport { MarkdownProvider } from './context/MarkdownContext';\n\nconst App: () => JSX.Element = () => {\n    return (\n        <MarkdownProvider>\n            <Layout/>\n        </MarkdownProvider>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals : () => void = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}